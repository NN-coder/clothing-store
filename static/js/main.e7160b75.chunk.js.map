{"version":3,"sources":["reducers/catalogReducer.ts","reducers/filtersReducer.ts","reducers/savedItemsReducer.ts","reducers/rootReducer.ts","store/store.ts","actions/filterActions.ts","components/Header/StyledSearch.tsx","components/Header/SearchWrapper.ts","components/Header/HeaderButtons.tsx","components/Header/StyledHeaderNav.tsx","components/Header/StyledHeader.tsx","actions/catalogActions.ts","components/Filter/StyledDropdownMenu.tsx","components/Filter/StyledFilterDropdown.tsx","components/Filter/StyledFilter.tsx","components/Filter/FilterWrapper.ts","actions/savedItemsActions.ts","components/Catalog/StyledAddToSavedItemsBtn.tsx","components/Catalog/savedItemsContext.ts","components/Catalog/CatalogItem/CatalogItem.tsx","components/Catalog/CatalogItem/CatalogItemWrapper.ts","components/Catalog/Catalog.tsx","getFilteredCatalog.ts","components/Catalog/CatalogWrapper.ts","components/SavedItems/StyledPlaceholder.tsx","components/SavedItems/StyledSavedItemsCard.tsx","components/SavedItems/SavedItems.tsx","components/SavedItems/SavedItemsWrapper.ts","components/App.tsx","index.tsx"],"names":["initialState","status","fetchResult","sortBy","byTitle","byPrice","Infinity","byGender","byCategory","bySubcategory","rootReducer","combineReducers","catalog","state","action","type","payload","filters","savedItems","Array","from","Set","stateSet","delete","store","createStore","savedState","window","sessionStorage","getItem","JSON","parse","undefined","err","loadState","composeWithDevTools","applyMiddleware","thunk","subscribe","getState","setItem","stringify","sort","by","filterByTitle","title","filterByGender","gender","SearchInput","styled","input","attrs","name","placeholder","SearchBtn","button","highlighting","ClearBtn","StyledSearch","className","searchValue","setSearchValue","useState","localSearchValue","setLocalSearchValue","handleInputChange","useCallback","target","value","handleClearBtnClick","onChange","onKeyPress","code","length","onClick","size","SearchWrapper","connect","dispatch","bindActionCreators","HeaderLink","Link","HeaderButtons","to","aria-label","NavigationLink","NavLink","StyledHeaderNav","HeaderContainer","div","Logo","h1","StyledHeader","href","fetchCatalog","url","fetch","then","res","json","fetchCatalogSuccess","catch","DropdownMenuOption","li","SelectedBtnStyles","css","UnselectedBtnStyles","DropdownMenuBtn","selected","StyledDropdownMenu","isOpen","menuOptions","listItemsKeys","useMemo","shortid","generate","role","map","index","text","handleClick","aria-selected","activeDropdownBtnStyles","inactiveDropdownBtnStyles","ToggleDropdownBtn","active","ArrowIcon","FaAngleDown","StyledFilterDropdown","btnText","listItems","toggleOpen","handleBtnClick","prevValue","aria-haspopup","aria-expanded","Object","entries","FilterContainer","StyledFilter","currentSort","FilterWrapper","addToSavedItems","productID","removeFromSavedItems","StyledAddToSavedItemsBtn","isAlreadyInSavedItemsList","isActive","setIsActive","handleFocus","handleBlur","handlers","onPointerEnter","onFocus","onPointerLeave","onBlur","SavedItemsContext","createContext","ItemLink","a","ItemImg","img","ItemTitle","p","ItemPrice","CatalogItemWrapper","product","price","id","itemPrice","toFixed","useContext","style","position","alt","src","includes","CatalogContainer","getFilteredCatalog","filteredCatalog","filter","toLowerCase","min","max","b","CatalogWrapper","useParams","useEffect","process","Provider","Title","h3","Text","StyledPlaceholder","Img","Price","RemoveFromSavedItemsBtn","ToBagBtn","StyledSavedItemsCard","productPrice","h2","SavedItemsInner","SavedItemsWrapper","App","path","component","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAKMA,EAAwB,CAAEC,OAAQ,UAAWC,YAAa,M,OCD1DF,EAAwB,CAC5BG,OAAQ,UACRC,QAAS,GACTC,QAAS,EAAEC,IAAUA,KACrBC,SAAU,KACVC,WAAY,KACZC,cAAe,M,QCPXT,EAAyB,GCGzBU,EAAcC,0BAAgB,CAClCC,QHAuD,WAAmC,IAAlCC,EAAiC,uDAAzBb,EAAcc,EAAW,uCACzF,MAAoB,0BAAhBA,EAAOC,KACF,CAAEd,OAAQ,UAAWC,YAAaY,EAAOE,SAE9B,0BAAhBF,EAAOC,KACF,CAAEd,OAAQ,UAAWC,YAAaY,EAAOE,SAE3CH,GGNPI,QFKsD,WAAmC,IAAlCJ,EAAiC,uDAAzBb,EAAcc,EAAW,uCACxF,MAAoB,SAAhBA,EAAOC,KAAwB,2BAAKF,GAAZ,IAAmBV,OAAQW,EAAOE,UAE1C,oBAAhBF,EAAOC,KAAmC,2BAAKF,GAAZ,IAAmBT,QAASU,EAAOE,UAEtD,oBAAhBF,EAAOC,KAAmC,2BAAKF,GAAZ,IAAmBR,QAASS,EAAOE,UAEtD,qBAAhBF,EAAOC,KAAoC,2BAAKF,GAAZ,IAAmBN,SAAUO,EAAOE,UAExD,uBAAhBF,EAAOC,KAAsC,2BAAKF,GAAZ,IAAmBL,WAAYM,EAAOE,UAE5D,0BAAhBF,EAAOC,KAAyC,2BAAKF,GAAZ,IAAmBJ,cAAeK,EAAOE,UAE/EH,GEjBPK,WDJ8D,WAAmC,IAAlCL,EAAiC,uDAAzBb,EAAcc,EAAW,uCAChG,GAAoB,uBAAhBA,EAAOC,KAA+B,OAAOI,MAAMC,KAAK,IAAIC,IAAJ,sBAAYR,GAAZ,CAAmBC,EAAOE,YAEtF,GAAoB,4BAAhBF,EAAOC,KAAoC,CAC7C,IAAMO,EAAW,IAAID,IAAIR,GAEzB,OADAS,EAASC,OAAOT,EAAOE,SAChBG,MAAMC,KAAKE,GAGpB,OAAOT,KEMHW,EAAsBC,sBAC1Bf,EAVgB,WAChB,IACE,IAAMgB,EAAaC,OAAOC,eAAeC,QAAQ,aACjD,OAAOH,EAAcI,KAAKC,MAAML,QAAwBM,EACxD,MAAOC,GACP,QAMFC,GACAC,8BAAoBC,0BAAgBC,OAGtCb,EAAMc,WAAU,kBAnBGzB,EAmBaW,EAAMe,gBAlBpCZ,OAAOC,eAAeY,QAAQ,YAAaV,KAAKW,UAAU5B,IAD1C,IAACA,K,kBCYb6B,EAAO,SAACC,GAAD,MAA6B,CACxC5B,KAAM,OACNC,QAAS2B,IAGLC,EAAgB,SAACC,GAAD,MAAyC,CAC7D9B,KAAM,kBACNC,QAAS6B,IAQLC,EAAiB,SAACC,GAAD,MAAkD,CACvEhC,KAAM,mBACNC,QAAS+B,I,08BC/BX,IAAMC,EAAcC,IAAOC,MAAMC,MAAM,CACrCpC,KAAM,SACNqC,KAAM,SACNC,YAAa,UAHKJ,CAAH,KAcXK,EAAYL,IAAOM,OAAV,KASJ,qBAAGC,aAAmC,QAAU,aACrC,qBAAGA,cAAmC,aAItDC,EAAWR,IAAOM,OAAOJ,MAAM,CACnCpC,KAAM,SACN,aAAc,cAFCkC,CAAH,KAyDRS,EAAeT,aAtCW,SAAC,GAAgD,IAA9CU,EAA6C,EAA7CA,UAAWC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,eAAqB,EAC9BC,mBAASF,GADqB,mBACvEG,EADuE,KACrDC,EADqD,KAGxEC,EAAoBC,uBACxB,gBAAGC,EAAH,EAAGA,OAAH,OAAqDH,EAAoBG,EAAOC,SAChF,IAGIC,EAAsBH,uBAAY,WACtCF,EAAoB,IACpBH,EAAe,MACd,CAACA,IAEJ,OACE,sBAAKF,UAAWA,EAAhB,UACE,cAACX,EAAD,CACEoB,MAAOL,EACPO,SAAUL,EACVM,WAAY,YACG,UADW,EAAXC,MACSX,EAAeE,MAGZ,IAA5BA,EAAiBU,QAChB,cAAChB,EAAD,CAAUiB,QAASL,EAAnB,SACE,cAAC,IAAD,CAASM,KAAK,WAGlB,cAACrB,EAAD,CACEvC,KAAK,SACLyC,aAA0C,IAA5BO,EAAiBU,OAC/BC,QAAS,kBAAMb,EAAeE,IAHhC,SAKE,cAAC,IAAD,WAMad,CAAH,KC3EZ2B,EAAgBC,aARE,SAAChE,GAAD,MAAqD,CAC3E+C,YAAa/C,EAAMI,QAAQb,YAGF,SAAC0E,GAAD,MAA8D,CACvFjB,eAAgBkB,6BAAmBnC,EAAekC,MAG9BD,CAA6CnB,G,wICVnE,IAAMsB,EAAa/B,YAAOgC,IAAPhC,CAAH,KAOViC,EAA0B,kBAC9B,gCACE,cAACF,EAAD,CAAYG,GAAG,IAAIC,aAAW,MAA9B,SACE,cAAC,IAAD,MAEF,cAACJ,EAAD,CAAYG,GAAG,eAAeC,aAAW,eAAzC,SACE,cAAC,IAAD,U,6eCdN,IAAMC,EAAiBpC,YAAOqC,IAAPrC,CAAH,KA8BdsC,EAAkBtC,aAPW,SAAC,GAAD,IAAGU,EAAH,EAAGA,UAAH,OACjC,sBAAKA,UAAWA,EAAhB,UACE,cAAC0B,EAAD,CAAgBF,GAAG,OAAnB,iBACA,cAACE,EAAD,CAAgBF,GAAG,SAAnB,wBAIoBlC,CAAH,K,gfC3BrB,IAAMuC,EAAkBvC,IAAOwC,IAAV,KAQfC,EAAOzC,IAAO0C,GAAV,KAyBJC,EAAe3C,aAbW,SAAC,GAAD,IAAGU,EAAH,EAAGA,UAAH,OAC9B,wBAAQA,UAAWA,EAAnB,SACE,eAAC6B,EAAD,WACE,cAACE,EAAD,UACE,mBAAGG,KAAK,IAAR,qBAEF,cAACN,EAAD,IACA,cAACX,EAAD,IACA,cAAC,EAAD,WAKe3B,CAAH,KCrBZ6C,EAAe,SAACC,GACpB,OAAO,SAACjB,GACNkB,MAAMD,GACHE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACrF,GAAD,OAAuBkE,EAdP,SAAClE,GAAD,MAAmD,CAC7EG,KAAM,wBACNC,QAASJ,GAYiCwF,CAAoBxF,OACzDyF,OAAM,SAACpE,GAAD,OAAgB6C,EAV6C,CACxE/D,KAAM,wBACNC,QAQwDiB,S,s7BCnB1D,IAAMqE,GAAqBrD,IAAOsD,GAAV,MAOlBC,GAAoBC,YAAH,MAKjBC,GAAsBD,YAAH,MAKnBE,GAAkB1D,IAAOM,OAAV,MAQjB,qBAAGqD,SAA2BJ,GAAoBE,MAkChDG,GAAqB5D,aArBW,SAAC,GAAwC,IAAtCU,EAAqC,EAArCA,UAAWmD,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,YACpDC,EAAgBC,mBACpB,kBAAM9F,MAAMC,KAAK,CAAEqD,OAAQsC,EAAYtC,SAAU,kBAAMyC,KAAQC,gBAC/D,CAACJ,EAAYtC,SAGf,OAAKqC,EAGH,oBAAInD,UAAWA,EAAWyD,KAAK,UAA/B,SACGL,EAAYM,KAAI,WAAsBC,GAAtB,uBAAEC,EAAF,KAAQC,EAAR,YACf,cAAClB,GAAD,CAA+Cc,KAAK,SAASK,gBAAc,QAA3E,SACE,cAACd,GAAD,CAAiB5F,KAAK,SAAS2D,QAAS8C,EAAxC,SACGD,KAFoBP,EAAcM,SALzB,OAeKrE,CAAH,M,29BC1DxB,IAAMyE,GAA0BjB,YAAH,MAKvBkB,GAA4BlB,YAAH,MAKzBmB,GAAoB3E,IAAOM,OAAV,MAOnB,qBAAGsE,OAAuBH,GAA0BC,MAGlDG,GAAY7E,YAAO8E,IAAP9E,CAAH,MAMJ,qBAAG4E,OAAuB,UAAY,aACjB,qBAAGA,OAAuB,kBAAoB,MAkCxEG,GAAuB/E,aAtBW,SAAC,GAAuC,IAArCgF,EAAoC,EAApCA,QAAStE,EAA2B,EAA3BA,UAAWuE,EAAgB,EAAhBA,UAAgB,EAChDpE,oBAAS,GADuC,mBACtEgD,EADsE,KAC9DqB,EAD8D,KAGvEC,EAAiBlE,uBAAY,kBAAMiE,GAAW,SAACE,GAAD,OAAgBA,OAAY,IAEhF,OACE,sBAAK1E,UAAWA,EAAhB,UACE,cAACiE,GAAD,CACE7G,KAAK,SACL8G,OAAQf,EACRpC,QAAS0D,EACTE,gBAAc,UACdC,gBAAezB,EALjB,SAOGmB,IAEH,cAACH,GAAD,CAAWD,OAAQf,IACnB,cAACD,GAAD,CAAoBC,OAAQA,EAAQC,YAAayB,OAAOC,QAAQP,UAKzCjF,CAAH,M,gRC5D1B,IAAMyF,GAAkBzF,IAAOwC,IAAV,MA4BfkD,GAAe1F,aAfW,SAAC,GAAD,IAAGU,EAAH,EAAGA,UAAwBjB,GAA3B,EAAckG,YAAd,EAA2BlG,MAA3B,OAC9B,qBAAKiB,UAAWA,EAAhB,SACE,cAAC+E,GAAD,UACE,cAACV,GAAD,CACEC,QAAQ,OACRC,UAAW,CACT,aAAc,kBAAMxF,EAAK,YACzB,oBAAqB,kBAAMA,EAAK,oBAChC,oBAAqB,kBAAMA,EAAK,8BAOrBO,CAAH,MCpBZ4F,GAAgBhE,aARE,SAAChE,GAAD,MAA2D,CACjF+H,YAAa/H,EAAMI,QAAQd,WAGF,SAAC2E,GAAD,MAA0D,CACnFpC,KAAMqC,6BAAmBrC,EAAMoC,MAGXD,CAA6C8D,ICR7DG,GAAkB,SAACC,GAAD,MAA+C,CACrEhI,KAAM,qBACNC,QAAS+H,IAGLC,GAAuB,SAACD,GAAD,MAAoD,CAC/EhI,KAAM,0BACNC,QAAS+H,I,uWCHX,IA6BME,GAA2BhG,aA7BW,SAAC,GAI/B,IAHZuE,EAGW,EAHXA,YACA7D,EAEW,EAFXA,UACAuF,EACW,EADXA,0BACW,EACqBpF,oBAAS,GAD9B,mBACJqF,EADI,KACMC,EADN,KAGLC,EAAcnF,uBAAY,kBAAMkF,GAAY,KAAO,IACnDE,EAAapF,uBAAY,kBAAMkF,GAAY,KAAQ,IAEnDG,EAAWtC,mBACf,iBAA+C,CAC7CvC,QAAS8C,EACTgC,eAAgBH,EAChBI,QAASJ,EACTK,eAAgBJ,EAChBK,OAAQL,KAEV,CAAC9B,EAAa6B,EAAaC,IAI7B,OACE,gDAAQvI,KAAK,SAAS4C,UAAWA,GAAe4F,GAAhD,aACGL,GAA6BC,EAAW,cAAC,KAAD,IAAkB,cAAC,KAAD,SAKhClG,CAAH,MCtCxB2G,GAAoBC,wBAA+B,M,oiBCKzD,IAAMC,GAAW7G,IAAO8G,EAAV,MAQRC,GAAU/G,IAAOgH,IAAV,MAKPC,GAAYjH,IAAOkH,EAAV,MAITC,GAAYnH,IAAOkH,EAAV,MCdTE,GAAqBxF,YAAQ,MAJR,SAACC,GAAD,MAAoE,CAC7FgE,gBAAiB/D,6BAAmB+D,GAAiBhE,MAG5BD,EDwBU,SAAC,GAAkC,IAAhCyF,EAA+B,EAA/BA,QAASxB,EAAsB,EAAtBA,gBACvCyB,EAA0BD,EAA1BC,MAAO1H,EAAmByH,EAAnBzH,MAAOoH,EAAYK,EAAZL,IAAKO,EAAOF,EAAPE,GACrBC,EAAS,WAAOF,EAAMG,QAAQ,IAE9BxJ,EAAayJ,qBAAWf,IAE9B,OACE,0BAASgB,MAAO,CAAEC,SAAU,YAA5B,UACE,eAACf,GAAD,CAAUjE,KAAK,IAAIT,aAAA,UAAevC,EAAf,oBAAgC4H,GAAnD,UACE,cAACT,GAAD,CAASc,IAAI,GAAGC,IAAKd,IACrB,cAACC,GAAD,UAAYrH,IACZ,cAACuH,GAAD,UAAYK,OAGd,cAACxB,GAAD,CACEC,0BAAyB,OAAEhI,QAAF,IAAEA,OAAF,EAAEA,EAAY8J,SAASR,GAChDhD,YAAa,kBAAMsB,EAAgB0B,Y,oMEvC3C,IAAMS,GAAmBhI,IAAOwC,IAAV,MCRhByF,GAAqB,SAACtK,EAAkBK,GAC5C,GAAuB,YAAnBL,EAAQX,OAAsB,CAChC,IAAIkL,EAAkBvK,EAAQV,YACtBC,EAAuCc,EAAvCd,OAAQC,EAA+Ba,EAA/Bb,QAASG,EAAsBU,EAAtBV,SAAUF,EAAYY,EAAZZ,QAYnC,GAVID,IACF+K,EAAkBA,EAAgBC,QAAO,qBAAGvI,MACpCwI,cAAcL,SAAS5K,EAAQiL,mBAIrC9K,IACF4K,EAAkBA,EAAgBC,QAAO,qBAAGrI,SAAwBxC,MAGlEF,EAAS,CAAC,IAAD,IAGLiL,EAAG,UAAGjL,EAAQ,UAAX,SAAkBC,IACrBiL,EAAG,UAAGlL,EAAQ,UAAX,QAAiBC,IAE1B6K,EAAkBA,EAAgBC,QAAO,gBAAGb,EAAH,EAAGA,MAAH,OAAeA,GAASe,GAAOf,GAASgB,KASnF,MANe,oBAAXpL,EACFgL,EAAgBzI,MAAK,SAACqH,EAAGyB,GAAJ,OAAUzB,EAAEQ,MAAQiB,EAAEjB,SACvB,qBAAXpK,GACTgL,EAAgBzI,MAAK,SAACqH,EAAGyB,GAAJ,OAAUA,EAAEjB,MAAQR,EAAEQ,SAGtC,2BAAK3J,GAAZ,IAAqBV,YAAaiL,IAGpC,OAAOvK,GCXH6K,GAAiB5G,aAhBC,SAAC,GAAD,IACtBjE,EADsB,EACtBA,QACAK,EAFsB,EAEtBA,QACAC,EAHsB,EAGtBA,WAHsB,MAIoC,CAC1DN,QAASsK,GAAmBtK,EAASK,GACrCC,iBAGyB,SACzB4D,GADyB,MAEkC,CAC3DgB,aAAcf,6BAAmBe,EAAchB,GAC/ChC,eAAgBiC,6BAAmBjC,EAAgBgC,MAG9BD,EFCU,SAAC,GAA2D,IAAzDjE,EAAwD,EAAxDA,QAASkF,EAA+C,EAA/CA,aAAchD,EAAiC,EAAjCA,eAAgB5B,EAAiB,EAAjBA,WACjE6B,EAAW2I,cAAX3I,OAQR,OANA4I,qBAAU,WACe,YAAnB/K,EAAQX,QAAsB6F,EAAa,GAAD,OAAI8F,kBAAJ,kBAE9C9I,EAAeC,KACd,CAACA,EAAQD,EAAgBgD,EAAclF,EAAQX,SAGhD,qCACE,cAAC4I,GAAD,IACA,cAACe,GAAkBiC,SAAnB,CAA4BzH,MAAOlD,EAAnC,SACE,kCACE,cAAC+J,GAAD,UACsB,YAAnBrK,EAAQX,QACPW,EAAQV,YAAYmH,KAAI,SAACiD,GAAD,OACtB,cAACD,GAAD,CAAqCC,QAASA,GAArBA,EAAQE,mB,ujBGvCjD,IAAMsB,GAAQ7I,IAAO8I,GAAV,MAILC,GAAO/I,IAAOkH,EAAV,MAqBJ8B,GAAoBhJ,aAXW,SAAC,GAAD,IAAGU,EAAH,EAAGA,UAAH,OACnC,sBAAKA,UAAWA,EAAhB,UACE,cAAC,IAAD,CAAegB,KAAM,KACrB,cAACmH,GAAD,sCACA,cAACE,GAAD,0IAOsB/I,CAAH,M,0hCCvBvB,IAAMiJ,GAAMjJ,IAAOgH,IAAV,MAKH6B,GAAQ7I,IAAOkH,EAAV,MAKLgC,GAAQlJ,IAAOwC,IAAV,MAKL2G,GAA0BnJ,IAAOM,OAAV,MAavB8I,GAAWpJ,IAAOM,OAAV,MAmCR+I,GAAuBrJ,aAnBW,SAAC,GAAkD,IAAhDU,EAA+C,EAA/CA,UAAW2G,EAAoC,EAApCA,QAAStB,EAA2B,EAA3BA,qBACrDuB,EAAsBD,EAAtBC,MAAO1H,EAAeyH,EAAfzH,MAAOoH,EAAQK,EAARL,IAChBsC,EAAY,WAAOhC,EAAMG,QAAQ,IAEvC,OACE,0BAAS/G,UAAWA,EAApB,UACE,oBAAGkC,KAAK,IAAIT,aAAA,UAAevC,EAAf,oBAAgC0J,GAA5C,UACE,cAACL,GAAD,CAAKpB,IAAI,GAAGC,IAAKd,IACjB,cAAC,GAAD,UAAQpH,IACR,cAACsJ,GAAD,UAAQI,OAEV,cAACF,GAAD,CAAUtL,KAAK,SAAf,0BACA,cAACqL,GAAD,CAAyBrL,KAAK,SAAS2D,QAASsE,EAAhD,SACE,cAAC,KAAD,WAMqB/F,CAAH,M,4XC9D1B,IAAM6I,GAAQ7I,IAAOuJ,GAAV,MAQLC,GAAkBxJ,IAAOwC,IAAV,MCIfiH,GAAoB7H,aAZF,SAAC,GAAD,MAGuC,CAC7DjE,QAJsB,EACtBA,QAIAM,WALsB,EAEtBA,eAMyB,SAAC4D,GAAD,MAAwE,CACjGkE,qBAAsBjE,6BAAmBiE,GAAsBlE,MAGvCD,EDUU,SAAC,GAAD,IAAGjE,EAAH,EAAGA,QAASM,EAAZ,EAAYA,WAAY8H,EAAxB,EAAwBA,qBAAxB,OAClC,qCACE,cAAC,GAAD,0BACA,eAACyD,GAAD,WACyB,IAAtBvL,EAAWuD,QAAgB,cAACwH,GAAD,IACR,YAAnBrL,EAAQX,QACPW,EAAQV,YACLkL,QAAO,gBAAGZ,EAAH,EAAGA,GAAH,OAAYtJ,EAAW8J,SAASR,MACvCnD,KAAI,gBAAGmD,EAAH,EAAGA,GAAOF,EAAV,8BACH,cAACgC,GAAD,CAEEtD,qBAAsB,kBAAMA,EAAqBwB,IACjDF,QAASA,GAFJE,eE/BbmC,GAAgB,kBACpB,eAAC,IAAYd,SAAb,CAAsBzH,MAAO,CAAEO,KAAM,QAArC,UACE,cAACiB,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgH,KAAK,eAAeC,UAAWH,KACtC,cAAC,IAAD,CAAOE,KAAK,WAAWC,UAAWpB,KAClC,cAAC,IAAD,CAAUrK,KAAK,IAAI+D,GAAG,gB,ihBCL5B,IAAM2H,GAAcC,YAAH,MA8BjBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAU1L,MAAOA,EAAjB,SACE,eAAC,IAAD,WACE,cAACsL,GAAD,IACA,cAAC,GAAD,WAINK,SAASC,eAAe,W","file":"static/js/main.e7160b75.chunk.js","sourcesContent":["import { Reducer } from 'redux';\n\nimport { CatalogActions } from '../actions/catalogActions';\nimport { Catalog } from '../types/catalog';\n\nconst initialState: Catalog = { status: 'loading', fetchResult: null };\n\nconst catalogReducer: Reducer<Catalog, CatalogActions> = (state = initialState, action) => {\n  if (action.type === 'FETCH_CATALOG_FAILURE')\n    return { status: 'failure', fetchResult: action.payload };\n\n  if (action.type === 'FETCH_CATALOG_SUCCESS')\n    return { status: 'success', fetchResult: action.payload };\n\n  return state;\n};\n\nexport { catalogReducer };\n","import { Reducer } from 'redux';\nimport { FilterActions } from '../actions/filterActions';\nimport { Filters } from '../types/filters';\n\nconst initialState: Filters = {\n  sortBy: 'novelty',\n  byTitle: '',\n  byPrice: [-Infinity, Infinity],\n  byGender: null,\n  byCategory: null,\n  bySubcategory: null,\n};\n\nconst filtersReducer: Reducer<Filters, FilterActions> = (state = initialState, action) => {\n  if (action.type === 'SORT') return { ...state, sortBy: action.payload };\n\n  if (action.type === 'FILTER_BY_TITLE') return { ...state, byTitle: action.payload };\n\n  if (action.type === 'FILTER_BY_PRICE') return { ...state, byPrice: action.payload };\n\n  if (action.type === 'FILTER_BY_GENDER') return { ...state, byGender: action.payload };\n\n  if (action.type === 'FILTER_BY_CATEGORY') return { ...state, byCategory: action.payload };\n\n  if (action.type === 'FILTER_BY_SUBCATEGORY') return { ...state, bySubcategory: action.payload };\n\n  return state;\n};\n\nexport { filtersReducer };\n","import { Reducer } from 'redux';\nimport { SavedItemsActions } from '../actions/savedItemsActions';\n\nconst initialState: string[] = [];\n\nconst savedItemsReducer: Reducer<string[], SavedItemsActions> = (state = initialState, action) => {\n  if (action.type === 'ADD_TO_SAVED_ITEMS') return Array.from(new Set([...state, action.payload]));\n\n  if (action.type === 'REMOVE_FROM_SAVED_ITEMS') {\n    const stateSet = new Set(state);\n    stateSet.delete(action.payload);\n    return Array.from(stateSet);\n  }\n\n  return state;\n};\n\nexport { savedItemsReducer };\n","import { combineReducers } from 'redux';\n\nimport { catalogReducer } from './catalogReducer';\nimport { filtersReducer } from './filtersReducer';\nimport { savedItemsReducer } from './savedItemsReducer';\n\nconst rootReducer = combineReducers({\n  catalog: catalogReducer,\n  filters: filtersReducer,\n  savedItems: savedItemsReducer,\n});\n\nexport { rootReducer };\n","import { createStore, applyMiddleware, Store } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport { rootReducer } from '../reducers/rootReducer';\nimport { State } from '../types/state';\n\nconst saveState = (state: State) => {\n  window.sessionStorage.setItem('app_state', JSON.stringify(state));\n};\n\nconst loadState = () => {\n  try {\n    const savedState = window.sessionStorage.getItem('app_state');\n    return savedState ? (JSON.parse(savedState) as State) : undefined;\n  } catch (err) {\n    return undefined;\n  }\n};\n\nconst store: Store<State> = createStore(\n  rootReducer,\n  loadState(),\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nstore.subscribe(() => saveState(store.getState()));\n\nexport { store };\n","import { Action } from '../types/action';\nimport { SortBy } from '../types/filters';\nimport { Category, Gender, Subcategory } from '../types/products';\n\ntype SortAction = Action<'SORT', SortBy>;\ntype FilterByTitleAction = Action<'FILTER_BY_TITLE', string>;\ntype FilterByPriceAction = Action<'FILTER_BY_PRICE', [number, number]>;\ntype FilterByGenderAction = Action<'FILTER_BY_GENDER', Gender | null>;\ntype FilterByCategoryAction = Action<'FILTER_BY_CATEGORY', Category | null>;\ntype FilterBySubcategoryAction = Action<'FILTER_BY_SUBCATEGORY', Subcategory | null>;\n\nexport type FilterActions =\n  | SortAction\n  | FilterByTitleAction\n  | FilterByPriceAction\n  | FilterByGenderAction\n  | FilterByCategoryAction\n  | FilterBySubcategoryAction;\n\nconst sort = (by: SortBy): SortAction => ({\n  type: 'SORT',\n  payload: by,\n});\n\nconst filterByTitle = (title: string): FilterByTitleAction => ({\n  type: 'FILTER_BY_TITLE',\n  payload: title,\n});\n\nconst filterByPrice = (range: [number, number]): FilterByPriceAction => ({\n  type: 'FILTER_BY_PRICE',\n  payload: range,\n});\n\nconst filterByGender = (gender: Gender | null): FilterByGenderAction => ({\n  type: 'FILTER_BY_GENDER',\n  payload: gender,\n});\n\nconst filterByCategory = (category: Category | null): FilterByCategoryAction => ({\n  type: 'FILTER_BY_CATEGORY',\n  payload: category,\n});\n\nconst filterBySubcategory = (subcategory: Subcategory | null): FilterBySubcategoryAction => ({\n  type: 'FILTER_BY_SUBCATEGORY',\n  payload: subcategory,\n});\n\nexport {\n  sort,\n  filterByTitle,\n  filterByPrice,\n  filterByGender,\n  filterByCategory,\n  filterBySubcategory,\n};\n","import React, { useCallback, useState } from 'react';\nimport styled from 'styled-components';\nimport { FiSearch } from 'react-icons/fi';\nimport { MdClose } from 'react-icons/md';\n\nconst SearchInput = styled.input.attrs({\n  type: 'search',\n  name: 'search',\n  placeholder: 'Search',\n})`\n  width: 100%;\n  height: 40px;\n  padding: 0 70px 0 15px;\n  color: inherit;\n  font-size: 1.5rem;\n  border: none;\n  border-radius: 19px / 50%;\n`;\n\nconst SearchBtn = styled.button<{ highlighting: boolean }>`\n  position: absolute;\n  top: 0;\n  right: -1px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 40px;\n  height: 100%;\n  color: ${({ highlighting }) => (highlighting ? 'white' : 'inherit')};\n  background-color: ${({ highlighting }) => highlighting && '#0770cf'};\n  border-radius: 19px / 50%;\n`;\n\nconst ClearBtn = styled.button.attrs({\n  type: 'button',\n  'aria-label': 'Clear text',\n})`\n  position: absolute;\n\n  /* Additional pixel for the correct alignment of the button in the center */\n  top: calc(50% + 1px);\n  right: 45px;\n  color: inherit;\n  transform: translateY(-50%);\n`;\n\nexport interface Props {\n  searchValue: string;\n  setSearchValue: (text: string) => void;\n  className?: string;\n}\n\nconst Search: React.FC<Props> = ({ className, searchValue, setSearchValue }) => {\n  const [localSearchValue, setLocalSearchValue] = useState(searchValue);\n\n  const handleInputChange = useCallback(\n    ({ target }: React.ChangeEvent<HTMLInputElement>) => setLocalSearchValue(target.value),\n    []\n  );\n\n  const handleClearBtnClick = useCallback(() => {\n    setLocalSearchValue('');\n    setSearchValue('');\n  }, [setSearchValue]);\n\n  return (\n    <div className={className}>\n      <SearchInput\n        value={localSearchValue}\n        onChange={handleInputChange}\n        onKeyPress={({ code }) => {\n          if (code === 'Enter') setSearchValue(localSearchValue);\n        }}\n      />\n      {localSearchValue.length !== 0 && (\n        <ClearBtn onClick={handleClearBtnClick}>\n          <MdClose size=\"24px\" />\n        </ClearBtn>\n      )}\n      <SearchBtn\n        type=\"button\"\n        highlighting={localSearchValue.length !== 0}\n        onClick={() => setSearchValue(localSearchValue)}\n      >\n        <FiSearch />\n      </SearchBtn>\n    </div>\n  );\n};\n\nconst StyledSearch = styled(Search)`\n  position: relative;\n  width: 100%;\n  max-width: 760px;\n  color: var(--standard-color);\n`;\n\nexport { StyledSearch };\n","import { bindActionCreators, Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { State } from '../../types/state';\nimport { filterByTitle } from '../../actions/filterActions';\nimport { StyledSearch, Props as SearchProps } from './StyledSearch';\n\nconst mapStateToProps = (state: State): Pick<SearchProps, 'searchValue'> => ({\n  searchValue: state.filters.byTitle,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): Pick<SearchProps, 'setSearchValue'> => ({\n  setSearchValue: bindActionCreators(filterByTitle, dispatch),\n});\n\nconst SearchWrapper = connect(mapStateToProps, mapDispatchToProps)(StyledSearch);\n\nexport { SearchWrapper };\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { FaShoppingCart, FaHeart } from 'react-icons/fa';\n\nconst HeaderLink = styled(Link)`\n  color: white;\n  & + & {\n    margin-left: 20px;\n  }\n`;\n\nconst HeaderButtons: React.FC = () => (\n  <div>\n    <HeaderLink to=\"/\" aria-label=\"Bag\">\n      <FaShoppingCart />\n    </HeaderLink>\n    <HeaderLink to=\"/saved-items\" aria-label=\"Saved items \">\n      <FaHeart />\n    </HeaderLink>\n  </div>\n);\n\nexport { HeaderButtons };\n","import React from 'react';\nimport styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nconst NavigationLink = styled(NavLink)`\n  display: inline-block;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100px;\n  height: 100%;\n  color: white;\n  font-weight: 700;\n  font-size: 1.6rem;\n  text-transform: uppercase;\n  transition: 0.2s;\n  &.active,\n  &:hover,\n  &:focus {\n    background-color: #525050;\n  }\n`;\n\nexport interface Props {\n  className?: string;\n}\n\nconst HeaderNav: React.FC<Props> = ({ className }) => (\n  <nav className={className}>\n    <NavigationLink to=\"/men\">Men</NavigationLink>\n    <NavigationLink to=\"/women\">Women</NavigationLink>\n  </nav>\n);\n\nconst StyledHeaderNav = styled(HeaderNav)`\n  display: flex;\n  height: 100%;\n`;\n\nexport { StyledHeaderNav };\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { SearchWrapper } from './SearchWrapper';\nimport { HeaderButtons } from './HeaderButtons';\nimport { StyledHeaderNav } from './StyledHeaderNav';\n\nconst HeaderContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  max-width: 1350px;\n  height: 65px;\n  margin: 0 auto;\n`;\nconst Logo = styled.h1`\n  margin: 0;\n  color: white;\n  font-weight: 700;\n  font-size: 3.5rem;\n  text-transform: uppercase;\n`;\n\nexport interface Props {\n  className?: string;\n}\n\nconst Header: React.FC<Props> = ({ className }) => (\n  <header className={className}>\n    <HeaderContainer>\n      <Logo>\n        <a href=\"/\">Store</a>\n      </Logo>\n      <StyledHeaderNav />\n      <SearchWrapper />\n      <HeaderButtons />\n    </HeaderContainer>\n  </header>\n);\n\nconst StyledHeader = styled(Header)`\n  background-color: var(--standard-color);\n`;\n\nexport { StyledHeader };\n","import { Dispatch } from 'redux';\nimport { Action } from '../types/action';\nimport { Products } from '../types/products';\n\ntype FetchCatalogSuccessAction = Action<'FETCH_CATALOG_SUCCESS', Products>;\ntype FetchCatalogFailureAction = Action<'FETCH_CATALOG_FAILURE', Error>;\n\nexport type CatalogActions = FetchCatalogSuccessAction | FetchCatalogFailureAction;\n\nconst fetchCatalogSuccess = (catalog: Products): FetchCatalogSuccessAction => ({\n  type: 'FETCH_CATALOG_SUCCESS',\n  payload: catalog,\n});\n\nconst fetchCatalogFailure = (error: Error): FetchCatalogFailureAction => ({\n  type: 'FETCH_CATALOG_FAILURE',\n  payload: error,\n});\n\nconst fetchCatalog = (url: string) => {\n  return (dispatch: Dispatch<CatalogActions>): void => {\n    fetch(url)\n      .then((res) => res.json())\n      .then((catalog: Products) => dispatch(fetchCatalogSuccess(catalog)))\n      .catch((err: Error) => dispatch(fetchCatalogFailure(err)));\n  };\n};\n\nexport { fetchCatalogSuccess, fetchCatalogFailure, fetchCatalog };\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useMemo } from 'react';\nimport shortid from 'shortid';\nimport styled, { css } from 'styled-components';\n\nconst DropdownMenuOption = styled.li`\n  font-size: 1.6em;\n  & + & {\n    margin-top: 10px;\n  }\n`;\n\nconst SelectedBtnStyles = css`\n  color: white;\n  font-weight: 700;\n  background-color: #0770cf;\n`;\nconst UnselectedBtnStyles = css`\n  color: #2d2d2d;\n  background-color: white;\n`;\n\nconst DropdownMenuBtn = styled.button<{ selected?: boolean }>`\n  width: 100%;\n  height: 45px;\n  padding: 0 14px;\n  color: #2d2d2d;\n  text-align-last: left;\n  background-color: white;\n  border-radius: 5px;\n  ${({ selected }) => (selected ? SelectedBtnStyles : UnselectedBtnStyles)}\n  &:hover,\n  &:focus {\n    box-shadow: -2px 2px 2px 0 rgba(0, 0, 0, 0.09);\n  }\n`;\n\nexport interface Props {\n  menuOptions: [string, () => any][];\n  isOpen: boolean;\n  className?: string;\n}\n\nconst DropdownMenu: React.FC<Props> = ({ className, isOpen, menuOptions }) => {\n  const listItemsKeys = useMemo(\n    () => Array.from({ length: menuOptions.length }, () => shortid.generate()),\n    [menuOptions.length]\n  );\n\n  if (!isOpen) return null;\n\n  return (\n    <ul className={className} role=\"listbox\">\n      {menuOptions.map(([text, handleClick], index) => (\n        <DropdownMenuOption key={listItemsKeys[index]} role=\"option\" aria-selected=\"false\">\n          <DropdownMenuBtn type=\"button\" onClick={handleClick}>\n            {text}\n          </DropdownMenuBtn>\n        </DropdownMenuOption>\n      ))}\n    </ul>\n  );\n};\n\nconst StyledDropdownMenu = styled(DropdownMenu)`\n  position: absolute;\n  z-index: 5;\n  width: 350px;\n  padding: 10px;\n  background-color: #eee;\n  box-shadow: 0 5px 13px -2px rgba(0, 0, 0, 0.8);\n`;\n\nexport { StyledDropdownMenu };\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useState, useCallback } from 'react';\nimport styled, { css } from 'styled-components';\nimport { FaAngleDown } from 'react-icons/fa';\nimport { StyledDropdownMenu } from './StyledDropdownMenu';\n\nconst activeDropdownBtnStyles = css`\n  color: #0770cf;\n  border-top: 2px solid currentColor;\n  box-shadow: 0 5px 13px -2px rgba(0, 0, 0, 0.8);\n`;\nconst inactiveDropdownBtnStyles = css`\n  color: inherit;\n  border-top: 1px solid #ddd;\n`;\n\nconst ToggleDropdownBtn = styled.button<{ active: boolean }>`\n  width: 100%;\n  height: 42px;\n  padding: 0 5px;\n  font-size: 1.6rem;\n  text-align-last: left;\n  border-bottom: 1px solid #ddd;\n  ${({ active }) => (active ? activeDropdownBtnStyles : inactiveDropdownBtnStyles)}\n`;\n// TODO: Figure out why the React throws a warning here\nconst ArrowIcon = styled(FaAngleDown)<{ active: boolean }>`\n  position: absolute;\n  top: 50%;\n  right: 5px;\n  width: 13px;\n  height: 13px;\n  color: ${({ active }) => (active ? '#0770cf' : 'inherit')};\n  transform: translateY(-50%) ${({ active }) => (active ? 'rotate(0.5turn)' : '')};\n  cursor: pointer;\n`;\n\nexport interface Props {\n  btnText: string;\n  listItems: {\n    [item: string]: () => any;\n  };\n  className?: string;\n}\n\nconst FilterDropdown: React.FC<Props> = ({ btnText, className, listItems }) => {\n  const [isOpen, toggleOpen] = useState(false);\n\n  const handleBtnClick = useCallback(() => toggleOpen((prevValue) => !prevValue), []);\n\n  return (\n    <div className={className}>\n      <ToggleDropdownBtn\n        type=\"button\"\n        active={isOpen}\n        onClick={handleBtnClick}\n        aria-haspopup=\"listbox\"\n        aria-expanded={isOpen}\n      >\n        {btnText}\n      </ToggleDropdownBtn>\n      <ArrowIcon active={isOpen} />\n      <StyledDropdownMenu isOpen={isOpen} menuOptions={Object.entries(listItems)} />\n    </div>\n  );\n};\n\nconst StyledFilterDropdown = styled(FilterDropdown)`\n  position: relative;\n  flex-shrink: 0;\n  width: 100%;\n  min-width: 140px;\n  max-width: 200px;\n  color: #666;\n  &:hover,\n  &:focus {\n    color: #0770cf;\n  }\n`;\n\nexport { StyledFilterDropdown };\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { SortBy } from '../../types/filters';\n\nimport { StyledFilterDropdown } from './StyledFilterDropdown';\n\nconst FilterContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  max-width: 1350px;\n  margin: 0 auto;\n`;\n\nexport interface Props {\n  currentSort: SortBy;\n  sort: (by: SortBy) => void;\n  className?: string;\n}\n\nconst Filter: React.FC<Props> = ({ className, currentSort, sort }) => (\n  <div className={className}>\n    <FilterContainer>\n      <StyledFilterDropdown\n        btnText=\"Sort\"\n        listItems={{\n          \"What's new\": () => sort('novelty'),\n          'Price low to high': () => sort('price_ascending'),\n          'Price high to low': () => sort('price_descending'),\n        }}\n      />\n    </FilterContainer>\n  </div>\n);\n\nconst StyledFilter = styled(Filter)`\n  padding: 10px 0;\n  background-color: #eee;\n`;\n\nexport { StyledFilter };\n","import { bindActionCreators, Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { State } from '../../types/state';\nimport { sort } from '../../actions/filterActions';\nimport { StyledFilter, Props as StyledFilterProps } from './StyledFilter';\n\nconst mapStateToProps = (state: State): Pick<StyledFilterProps, 'currentSort'> => ({\n  currentSort: state.filters.sortBy,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): Pick<StyledFilterProps, 'sort'> => ({\n  sort: bindActionCreators(sort, dispatch),\n});\n\nconst FilterWrapper = connect(mapStateToProps, mapDispatchToProps)(StyledFilter);\n\nexport { FilterWrapper };\n","import { Action } from '../types/action';\n\ntype AddToSavedItemsAction = Action<'ADD_TO_SAVED_ITEMS', string>;\ntype RemoveFromSavedItemsAction = Action<'REMOVE_FROM_SAVED_ITEMS', string>;\n\nexport type SavedItemsActions = AddToSavedItemsAction | RemoveFromSavedItemsAction;\n\nconst addToSavedItems = (productID: string): AddToSavedItemsAction => ({\n  type: 'ADD_TO_SAVED_ITEMS',\n  payload: productID,\n});\n\nconst removeFromSavedItems = (productID: string): RemoveFromSavedItemsAction => ({\n  type: 'REMOVE_FROM_SAVED_ITEMS',\n  payload: productID,\n});\n\nexport { addToSavedItems, removeFromSavedItems };\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useState, useCallback, useMemo } from 'react';\nimport styled from 'styled-components';\nimport { BsHeartFill, BsHeart } from 'react-icons/bs';\n\nexport interface Props {\n  handleClick: () => void;\n  isAlreadyInSavedItemsList: boolean | undefined;\n  className?: string;\n}\n\nconst AddToSavedItemsBtn: React.FC<Props> = ({\n  handleClick,\n  className,\n  isAlreadyInSavedItemsList,\n}: Props) => {\n  const [isActive, setIsActive] = useState(false);\n\n  const handleFocus = useCallback(() => setIsActive(true), []);\n  const handleBlur = useCallback(() => setIsActive(false), []);\n\n  const handlers = useMemo(\n    (): React.DOMAttributes<HTMLButtonElement> => ({\n      onClick: handleClick,\n      onPointerEnter: handleFocus,\n      onFocus: handleFocus,\n      onPointerLeave: handleBlur,\n      onBlur: handleBlur,\n    }),\n    [handleClick, handleFocus, handleBlur]\n  );\n\n  // TODO: Add animation on click\n  return (\n    <button type=\"button\" className={className} {...handlers}>\n      {isAlreadyInSavedItemsList || isActive ? <BsHeartFill /> : <BsHeart />}\n    </button>\n  );\n};\n\nconst StyledAddToSavedItemsBtn = styled(AddToSavedItemsBtn)`\n  position: absolute;\n  top: 360px;\n  right: 10px;\n  width: 40px;\n  height: 40px;\n  background-color: white;\n  border-radius: 50%;\n  cursor: default;\n  &:hover,\n  &:focus {\n    box-shadow: 0 2px 4px 0 rgba(45, 45, 45, 0.14);\n  }\n  svg {\n    margin-top: 5px;\n  }\n`;\n\nexport { StyledAddToSavedItemsBtn };\n","import { createContext } from 'react';\n\nconst SavedItemsContext = createContext<string[] | null>(null);\n\nexport { SavedItemsContext };\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\n\nimport { ProductsItem } from '../../../types/products';\nimport { StyledAddToSavedItemsBtn } from '../StyledAddToSavedItemsBtn';\nimport { SavedItemsContext } from '../savedItemsContext';\n\nconst ItemLink = styled.a`\n  display: flex;\n  flex-direction: column;\n  color: var(--standard-color);\n  font-size: 1.4rem;\n  row-gap: 10px;\n`;\n\nconst ItemImg = styled.img`\n  width: 100%;\n  height: 410px;\n  object-fit: cover;\n`;\nconst ItemTitle = styled.p`\n  height: 45px;\n  line-height: 20px;\n`;\nconst ItemPrice = styled.p`\n  font-weight: 700;\n  font-size: 1.5rem;\n`;\n\nexport interface Props {\n  product: ProductsItem;\n  addToSavedItems: (product: string) => void;\n}\n\nconst CatalogItem: React.FC<Props> = ({ product, addToSavedItems }) => {\n  const { price, title, img, id } = product;\n  const itemPrice = `$${price.toFixed(2)}`;\n\n  const savedItems = useContext(SavedItemsContext);\n\n  return (\n    <article style={{ position: 'relative' }}>\n      <ItemLink href=\"/\" aria-label={`${title}; Price: ${itemPrice}`}>\n        <ItemImg alt=\"\" src={img} />\n        <ItemTitle>{title}</ItemTitle>\n        <ItemPrice>{itemPrice}</ItemPrice>\n      </ItemLink>\n\n      <StyledAddToSavedItemsBtn\n        isAlreadyInSavedItemsList={savedItems?.includes(id)}\n        handleClick={() => addToSavedItems(id)}\n      />\n    </article>\n  );\n};\n\nexport { CatalogItem };\n","import { bindActionCreators, Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { addToSavedItems } from '../../../actions/savedItemsActions';\nimport { CatalogItem, Props as CatalogItemProps } from './CatalogItem';\n\nconst mapDispatchToProps = (dispatch: Dispatch): Pick<CatalogItemProps, 'addToSavedItems'> => ({\n  addToSavedItems: bindActionCreators(addToSavedItems, dispatch),\n});\n\nconst CatalogItemWrapper = connect(null, mapDispatchToProps)(CatalogItem);\n\nexport { CatalogItemWrapper };\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport { Catalog as CatalogState } from '../../types/catalog';\nimport { Gender } from '../../types/products';\nimport { FilterWrapper } from '../Filter/FilterWrapper';\nimport { CatalogItemWrapper } from './CatalogItem/CatalogItemWrapper';\nimport { SavedItemsContext } from './savedItemsContext';\n\nconst CatalogContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 35px 20px;\n  max-width: 1350px;\n  margin: 30px auto;\n`;\n\nexport interface Props {\n  catalog: CatalogState;\n  savedItems: string[];\n  fetchCatalog: (url: string) => void;\n  filterByGender: (gender: Gender) => void;\n}\n\nconst Catalog: React.FC<Props> = ({ catalog, fetchCatalog, filterByGender, savedItems }) => {\n  const { gender } = useParams<{ gender: Gender }>();\n\n  useEffect(() => {\n    if (catalog.status === 'loading') fetchCatalog(`${process.env.PUBLIC_URL}/catalog.json`);\n\n    filterByGender(gender);\n  }, [gender, filterByGender, fetchCatalog, catalog.status]);\n\n  return (\n    <>\n      <FilterWrapper />\n      <SavedItemsContext.Provider value={savedItems}>\n        <section>\n          <CatalogContainer>\n            {catalog.status === 'success' &&\n              catalog.fetchResult.map((product) => (\n                <CatalogItemWrapper key={product.id} product={product} />\n              ))}\n          </CatalogContainer>\n        </section>\n      </SavedItemsContext.Provider>\n    </>\n  );\n};\n\nexport { Catalog };\n","import { Catalog } from './types/catalog';\nimport { Filters } from './types/filters';\n\nconst getFilteredCatalog = (catalog: Catalog, filters: Filters): Catalog => {\n  if (catalog.status === 'success') {\n    let filteredCatalog = catalog.fetchResult;\n    const { sortBy, byTitle, byGender, byPrice } = filters;\n\n    if (byTitle) {\n      filteredCatalog = filteredCatalog.filter(({ title }) =>\n        title.toLowerCase().includes(byTitle.toLowerCase())\n      );\n    }\n\n    if (byGender) {\n      filteredCatalog = filteredCatalog.filter(({ gender }) => gender === byGender);\n    }\n\n    if (byPrice) {\n      // Saving the app state in the browser's session storage turns the price range [-Infinity, Infinity]\n      // into [null, null], so this check is necessary\n      const min = byPrice[0] ?? -Infinity;\n      const max = byPrice[1] ?? Infinity;\n\n      filteredCatalog = filteredCatalog.filter(({ price }) => price >= min && price <= max);\n    }\n\n    if (sortBy === 'price_ascending') {\n      filteredCatalog.sort((a, b) => a.price - b.price);\n    } else if (sortBy === 'price_descending') {\n      filteredCatalog.sort((a, b) => b.price - a.price);\n    }\n\n    return { ...catalog, fetchResult: filteredCatalog };\n  }\n\n  return catalog;\n};\n\nexport { getFilteredCatalog };\n","import { bindActionCreators, Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { State } from '../../types/state';\nimport { fetchCatalog } from '../../actions/catalogActions';\nimport { filterByGender } from '../../actions/filterActions';\nimport { Catalog, Props as CatalogProps } from './Catalog';\nimport { getFilteredCatalog } from '../../getFilteredCatalog';\n\nconst mapStateToProps = ({\n  catalog,\n  filters,\n  savedItems,\n}: State): Pick<CatalogProps, 'catalog' | 'savedItems'> => ({\n  catalog: getFilteredCatalog(catalog, filters),\n  savedItems,\n});\n\nconst mapDispatchToProps = (\n  dispatch: Dispatch\n): Pick<CatalogProps, 'fetchCatalog' | 'filterByGender'> => ({\n  fetchCatalog: bindActionCreators(fetchCatalog, dispatch),\n  filterByGender: bindActionCreators(filterByGender, dispatch),\n});\n\nconst CatalogWrapper = connect(mapStateToProps, mapDispatchToProps)(Catalog);\n\nexport { CatalogWrapper };\n","import React from 'react';\nimport styled from 'styled-components';\nimport { FaHeartBroken } from 'react-icons/fa';\n\nconst Title = styled.h3`\n  font-weight: 700;\n  font-size: 1.8em;\n`;\nconst Text = styled.p`\n  font-size: 1.6em;\n  line-height: 22px;\n  letter-spacing: 0.025em;\n`;\n\nexport interface Props {\n  className?: string;\n}\n\nconst Placeholder: React.FC<Props> = ({ className }) => (\n  <div className={className}>\n    <FaHeartBroken size={30} />\n    <Title>You have no saved items</Title>\n    <Text>\n      You haven&apos;t added anything to the list of saved items yet. Look through our catalog and\n      choose something for yourself.\n    </Text>\n  </div>\n);\n\nconst StyledPlaceholder = styled(Placeholder)`\n  display: flex;\n  flex-direction: column;\n  grid-column: 1 / -1;\n  align-items: center;\n  justify-content: center;\n  justify-self: center;\n  max-width: 300px;\n  height: 300px;\n  text-align: center;\n  row-gap: 20px;\n`;\n\nexport { StyledPlaceholder };\n","import React from 'react';\nimport styled from 'styled-components';\nimport { BsTrash } from 'react-icons/bs';\n\nimport { ProductsItem } from '../../types/products';\n\nconst Img = styled.img`\n  width: 100%;\n  height: 410px;\n  object-fit: cover;\n`;\nconst Title = styled.p`\n  height: 45px;\n  margin-top: 10px;\n  line-height: 20px;\n`;\nconst Price = styled.div`\n  margin-top: 10px;\n  color: #666;\n  font-weight: 700;\n`;\nconst RemoveFromSavedItemsBtn = styled.button`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  width: 40px;\n  height: 40px;\n  background-color: rgba(255, 255, 255, 0.8);\n  border-radius: 50%;\n  cursor: default;\n  svg {\n    margin-top: 4px;\n  }\n`;\nconst ToBagBtn = styled.button`\n  width: 100%;\n  height: 35px;\n  margin-top: 15px;\n  color: #2d2d2d;\n  font-weight: 700;\n  text-transform: uppercase;\n  border: 2px solid #018849;\n`;\n\nexport interface Props {\n  product: Pick<ProductsItem, 'price' | 'title' | 'img'>;\n  removeFromSavedItems: () => void;\n  className?: string;\n}\n\nconst SavedItemsCard: React.FC<Props> = ({ className, product, removeFromSavedItems }) => {\n  const { price, title, img } = product;\n  const productPrice = `$${price.toFixed(2)}`;\n\n  return (\n    <article className={className}>\n      <a href=\"/\" aria-label={`${title}; Price: ${productPrice}`}>\n        <Img alt=\"\" src={img} />\n        <Title>{title}</Title>\n        <Price>{productPrice}</Price>\n      </a>\n      <ToBagBtn type=\"button\">Move to cart</ToBagBtn>\n      <RemoveFromSavedItemsBtn type=\"button\" onClick={removeFromSavedItems}>\n        <BsTrash />\n      </RemoveFromSavedItemsBtn>\n    </article>\n  );\n};\n\nconst StyledSavedItemsCard = styled(SavedItemsCard)`\n  position: relative;\n  font-size: 1.4rem;\n  letter-spacing: 0.05em;\n`;\n\nexport { StyledSavedItemsCard };\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { Catalog } from '../../types/catalog';\nimport { StyledPlaceholder } from './StyledPlaceholder';\nimport { StyledSavedItemsCard } from './StyledSavedItemsCard';\n\nconst Title = styled.h2`\n  padding: 25px 0;\n  color: #2d2d2d;\n  font-size: 2.4rem;\n  text-align: center;\n  background-color: #eee;\n`;\n\nconst SavedItemsInner = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 40px 15px;\n  max-width: 1350px;\n  margin: 50px auto;\n`;\n\nexport interface Props {\n  catalog: Catalog;\n  savedItems: string[];\n  removeFromSavedItems: (id: string) => void;\n}\n\nconst SavedItems: React.FC<Props> = ({ catalog, savedItems, removeFromSavedItems }) => (\n  <>\n    <Title>Saved Items</Title>\n    <SavedItemsInner>\n      {savedItems.length === 0 && <StyledPlaceholder />}\n      {catalog.status === 'success' &&\n        catalog.fetchResult\n          .filter(({ id }) => savedItems.includes(id))\n          .map(({ id, ...product }) => (\n            <StyledSavedItemsCard\n              key={id}\n              removeFromSavedItems={() => removeFromSavedItems(id)}\n              product={product}\n            />\n          ))}\n    </SavedItemsInner>\n  </>\n);\n\nexport { SavedItems };\n","import { bindActionCreators, Dispatch } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { State } from '../../types/state';\nimport { removeFromSavedItems } from '../../actions/savedItemsActions';\nimport { SavedItems, Props as SavedItemsProps } from './SavedItems';\n\nconst mapStateToProps = ({\n  catalog,\n  savedItems,\n}: State): Pick<SavedItemsProps, 'catalog' | 'savedItems'> => ({\n  catalog,\n  savedItems,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): Pick<SavedItemsProps, 'removeFromSavedItems'> => ({\n  removeFromSavedItems: bindActionCreators(removeFromSavedItems, dispatch),\n});\n\nconst SavedItemsWrapper = connect(mapStateToProps, mapDispatchToProps)(SavedItems);\n\nexport { SavedItemsWrapper };\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport { IconContext } from 'react-icons';\nimport { StyledHeader } from './Header/StyledHeader';\nimport { CatalogWrapper } from './Catalog/CatalogWrapper';\nimport { SavedItemsWrapper } from './SavedItems/SavedItemsWrapper';\n\nconst App: React.FC = () => (\n  <IconContext.Provider value={{ size: '20px' }}>\n    <StyledHeader />\n    <Switch>\n      <Route path=\"/saved-items\" component={SavedItemsWrapper} />\n      <Route path=\"/:gender\" component={CatalogWrapper} />\n      <Redirect from=\"/\" to=\"/men\" />\n    </Switch>\n  </IconContext.Provider>\n);\n\nexport { App };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createGlobalStyle } from 'styled-components';\nimport { HashRouter } from 'react-router-dom';\n\nimport { store } from './store/store';\nimport { App } from './components/App';\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n\n    @media screen and (prefers-reduced-motion: reduce) {\n      transition: none;\n    }\n  }\n  :root {\n    font-size: 10px;\n    font-family: 'Roboto', sans-serif;\n\n    --standard-color: #2d2d2d;\n  }\n  a {\n    color: inherit;\n    text-decoration: none;\n  }\n  button {\n    background: none;\n    border: none;\n    cursor: pointer;\n  }\n  ul {\n    list-style: none;\n  }\n`;\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter>\n        <GlobalStyle />\n        <App />\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}